name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'  # You can set a default branch if desired

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}  # Checkout the branch specified by the manual trigger

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'  # specify your Go version

      - name: Build the Go Application
        run: |
          go mod download
          go build -o myapp

      - name: Decode and Copy PEM Key
        run: |
          mkdir -p ~/.ssh  # Ensure the .ssh directory exists
          echo "$EC2_SSH_KEY_BASE64" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          EC2_SSH_KEY_BASE64: ${{ secrets.EC2_SSH_KEY_BASE64 }}

      - name: Deploy the Go Application to EC2
        run: |
          # SSH into EC2 to stop and disable the service, then delete the binary
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Stop and disable the systemd service if it exists
            sudo systemctl stop myapp.service || true
            sudo systemctl disable myapp.service || true

            # Ensure no process is using the binary file
            pid=$(pgrep -f /home/${{ secrets.EC2_USER }}/myapp)
            if [ -n "$pid" ]; then
              echo "Stopping the running myapp process with PID $pid"
              sudo kill -9 $pid
            fi

            # Remove the old binary if it exists
            if [ -f /home/${{ secrets.EC2_USER }}/myapp ]; then
              echo "
