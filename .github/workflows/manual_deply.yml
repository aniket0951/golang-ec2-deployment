name: Manual Deployment

on:
  push:
    branches:
      - main  # Automatically deploy when pushing to the main branch
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'  # You can set a default branch if desired

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}  # Checkout the branch specified by the manual trigger

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'  # specify your Go version

      - name: Build the Go Application
        run: |
          go mod download
          go build -o myapp

      - name: Decode and Copy PEM Key
        run: |
          mkdir -p ~/.ssh  # Ensure the .ssh directory exists
          echo "$EC2_SSH_KEY_BASE64" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          EC2_SSH_KEY_BASE64: ${{ secrets.EC2_SSH_KEY_BASE64 }}

      - name: Deploy the Go Application to EC2
        run: |
          # Copy the built Go binary to EC2
          scp -o StrictHostKeyChecking=no myapp ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/myapp
          
          # Create and configure the systemd service on EC2
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Create a systemd service file
            echo "[Unit]
            Description=My Go Application
            After=network.target

            [Service]
            ExecStart=/home/${{ secrets.EC2_USER }}/myapp
            Restart=always
            User=ec2-user

            [Install]
            WantedBy=multi-user.target" | sudo tee /etc/systemd/system/myapp.service > /dev/null

            # Reload systemd to recognize the new service
            sudo systemctl daemon-reload

            # Enable the service to start on boot
            sudo systemctl enable myapp.service

            # Start the service
            sudo systemctl start myapp.service
          EOF
